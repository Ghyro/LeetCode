using System.Collections.Generic;

namespace Medium
{
    class SimpleBankSystem
    {
        readonly Dictionary<int, long> _usersBalance;
        public SimpleBankSystem(long[] balance)
        {
            _usersBalance = new Dictionary<int, long>();
            var userId = 1;
            foreach (var item in balance)
            {
                _usersBalance.Add(userId, item);
                userId++;
            }
        }

        public bool Transfer(int account1, int account2, long money)
        {
            if (!_usersBalance.TryGetValue(account1, out var val1) || !_usersBalance.TryGetValue(account2, out _))
                return false;

            if (val1 < money || money < 0)
                return false;

            _usersBalance[account1] -= money;
            _usersBalance[account2] += money;
            return true;
        }

        public bool Deposit(int account, long money)
        {
            if (money < 0)
                return false;

            if (!_usersBalance.TryGetValue(account, out _))
                return false;

            _usersBalance[account] += money;
            return true;
        }

        public bool Withdraw(int account, long money)
        {
            if (!_usersBalance.TryGetValue(account, out var val))
                return false;

            if (val < money || money < 0)
                return false;

            _usersBalance[account] = val - money;
            return true;
        }
    }
}
